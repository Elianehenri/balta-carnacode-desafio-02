@page "/history"
@using IMC.Services
@using IMC.Models
@inject IBmiService BmiService;


<link rel="stylesheet" href="History.razor.css" />

<main class="container">
	<div class="imagem">
		<div class="logo">
			<img src="./assets/icon-no-bg.png" alt="Logo da aplicação">
		</div>
	</div>
	<h1 class="titulo">Histórico</h1>
	<div class="history">
		<input id="pesquisa-historico" type="text" class="input-text-history" placeholder="Pesquisar...">
		@foreach (var registro in _bmiHistory)
		{
			<div class="card">
				<div class="card-history">
					<div class="history-log"></div>
				</div>
				<div class="card-history-content">
					<div class="card-history-head">
						<span class="title">@registro.Titulo <span class=@registro.CssIcone></span></span>
						<span class="time-history">@registro.TextoDataHora</span>
					</div>
					<div class="text-history">
						<p>@registro.Texto</p>
					</div>
				</div>
			</div>
		}
	</div>
</main>

@code {
	private List<RegistroHistoricoViewModel> _bmiHistory = new ();

	protected override async Task OnInitializedAsync()
	{
		var bmis = BmiService.Listar();

		_bmiHistory = bmis
			.Select(bmi => new RegistroHistoricoViewModel(bmi))
			.ToList();
	}

	public class RegistroHistoricoViewModel
	{
		private const string CssIconeOk = "custom-icon-verde fa-solid fa-square-check";
		private const string CssIconeRuim = "custom-icon-vermelho fa-solid fa-circle-minus";

		private const string MensagemPesoIdeal = "Parabéns, você está no seu peso ideal, continue mantendo este estilo!";
		private const string MensagemSobrepeso = "Estamos quase lá! Faça alguns ajustes para ficar no peso ideal!";
		private const string MensagemAbaixoPeso = "Estamos quase lá! Tente comer mais vezes ao longo do dia!";

		public string Titulo {get; set;}
		public string CssIcone { get; set; }
		public string TextoDataHora {get; set;}
		public string Texto { get; set; }

		public RegistroHistoricoViewModel(BMIModel bmi)
		{
			var peso = int.Parse(bmi.Peso);
			Titulo = peso > 60
				? "Sobrepeso"
				: "Peso ideal";

			CssIcone = peso > 60
				? CssIconeOk
				: CssIconeRuim;

			var data = new DateTime(2024, 02, 12);
			var dataDif = (DateTime.Now - data);
			TextoDataHora = dataDif.Hours < 1
				? $"{dataDif.Minutes}m atrás"
				: data.ToShortDateString();

			Texto = peso > 80
				? MensagemSobrepeso
				: peso > 55
					? MensagemPesoIdeal
					: MensagemAbaixoPeso;
		}
	}
}
